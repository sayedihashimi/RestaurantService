{
  "openapi": "3.0.1",
  "info": {
    "title": "MyRestaurantApi",
    "version": "1.0"
  },
  "paths": {
    "/api/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get all contacts",
        "operationId": "GetAllContacts",
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create a new contact",
        "description": "Creates a new contact. The Id field will automatically be set when the object is persisted to the database.",
        "operationId": "CreateContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/api/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get a contact by it's Id",
        "operationId": "GetContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the contact to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Update a contact (specified by Id)",
        "description": "Updates a contact with the new values provided. You must specify the Id of the contact which should be updated.",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes the specified contact",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/MenuItem": {
      "get": {
        "tags": [
          "MenuItem"
        ],
        "summary": "Gets all Menu Items",
        "operationId": "GetAllMenuItems",
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MenuItem"
        ],
        "summary": "Creates a new MenuItem",
        "operationId": "CreateMenuItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/MenuItem/cat/{category}": {
      "get": {
        "tags": [
          "MenuItem"
        ],
        "summary": "Gets all menu items for the given category",
        "operationId": "GetAllMenuItemsByType",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category for the items to get. Must be a valid value for MenuItemCategory enum",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/MenuItem/{id}": {
      "get": {
        "tags": [
          "MenuItem"
        ],
        "summary": "Get a MenuItem by it's Id",
        "operationId": "GetMenuItemById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the MenuItem to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "MenuItem"
        ],
        "summary": "Update a MenuItem by its id",
        "operationId": "UpdateMenuItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the MenuItem to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "MenuItem"
        ],
        "summary": "Deletes a MenuItem by its Id",
        "operationId": "DeleteMenuItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the MenuItem to delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/MenuItemOrdered": {
      "get": {
        "tags": [
          "MenuItemOrdered"
        ],
        "summary": "Gets all menu items ordered.",
        "operationId": "GetAllMenuItemOrdereds",
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuItemOrdered"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MenuItemOrdered"
        ],
        "summary": "Creates a new menu item",
        "operationId": "CreateMenuItemOrdered",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemOrdered"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemOrdered"
                }
              }
            }
          }
        }
      }
    },
    "/api/MenuItemOrdered/{id}": {
      "get": {
        "tags": [
          "MenuItemOrdered"
        ],
        "summary": "Get a menu item by it's Id",
        "operationId": "GetMenuItemOrderedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the menu item to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemOrdered"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "MenuItemOrdered"
        ],
        "summary": "Updates a menu item by it's Id",
        "operationId": "UpdateMenuItemOrdered",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the menu item to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemOrdered"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "MenuItemOrdered"
        ],
        "summary": "Deletes the menu item ordered by its Id",
        "operationId": "DeleteMenuItemOrdered",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/TogoOrder": {
      "get": {
        "tags": [
          "TogoOrder"
        ],
        "summary": "Creates a new togo order",
        "operationId": "GetAllTogoOrders",
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TogoOrder"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TogoOrder"
        ],
        "summary": "Creates a new togo order",
        "operationId": "CreateTogoOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TogoOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TogoOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/TogoOrder/{id}": {
      "get": {
        "tags": [
          "TogoOrder"
        ],
        "summary": "Get a togo order by it's Id",
        "operationId": "GetTogoOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the togo order to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TogoOrder"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "TogoOrder"
        ],
        "summary": "Updates the togo order by it's Id",
        "operationId": "UpdateTogoOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the togo order to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TogoOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "TogoOrder"
        ],
        "summary": "Deletes the togo order with the given Id",
        "operationId": "DeleteTogoOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": { }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/TogoOrder/form": {
      "post": {
        "tags": [
          "TogoOrder"
        ],
        "summary": "Endpoint to update the togo order using a form",
        "operationId": "CreateTogoOrderFromPost",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TogoOrder"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TogoOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TogoOrder"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/MenuItemCategory"
          }
        },
        "additionalProperties": false
      },
      "MenuItemCategory": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "MenuItemOrdered": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "menuItemId": {
            "type": "integer",
            "format": "int32"
          },
          "togoOrderId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/MenuItemCategory"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethod": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TogoOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemsOrdered": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItemOrdered"
            },
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "customer": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "additionalProperties": false
      }
    }
  }
}